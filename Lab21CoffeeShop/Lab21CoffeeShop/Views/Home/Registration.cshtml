@model Lab21CoffeeShop.Models.UserModel

@{
    ViewBag.Title = "GC Coffee Registration";
}


<style>
    .error {
        color: red;
    }
</style>

<div class="container">
    @using (Html.BeginForm("Welcome", "Home", FormMethod.Post, new { @class = "registerForm" }))
    {
        Html.ValidationSummary(true);
        Html.EnableClientValidation(true);
        Html.EnableUnobtrusiveJavaScript(true);
        <br />
        <div class="row">
            <div class="col">
                <div class="form-group">
                    <label for="FirstName">First Name</label>
                    @Html.TextBoxFor(user => user.FirstName, new { @class = "form-control", @placeholder = "First Name" })
                    @Html.ValidationMessageFor(user => user.FirstName, "", new { @class = "error" })
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col">
                <label for="LastName">Last Name</label>
                @Html.TextBoxFor(user => user.LastName, new { @class = "form-control", @placeholder = "Last Name" })
                @Html.ValidationMessageFor(user => user.LastName, "", new { @class = "error" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col">
                <label for="Email">Email</label>
                @Html.TextBoxFor(user => user.Email, new { @class = "form-control", @placeholder = "sample@sample.com" })
                @Html.ValidationMessageFor(user => user.Email, "", new { @class = "error" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col">
                <label for="PhoneNumber">Phone Number</label>
                @Html.TextBoxFor(user => user.PhoneNumber, new { @class = "form-control", @placeholder = "Phone Number"})
                @Html.ValidationMessageFor(user => user.PhoneNumber, "", new { @class = "error" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col">
                <label for="Password">Password</label>
                @Html.PasswordFor(user => user.Password, new { @class = "form-control", @placeholder = "Password" })
                @Html.ValidationMessageFor(user => user.Password, "", new { @class = "error" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col">
                <label for="ConfirmPassword">Re-enter Password</label>
                @Html.PasswordFor(user => user.ConfirmPassword, new { @class = "form-control", @placeholder = "Re-Enter Password" })
                @Html.ValidationMessageFor(user => user.Password, "", new { @class = "error" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col">
                <button class="btn btn-primary" type="submit" value="Register">Register</button>
            </div>
        </div>
    }
</div>

@section scripts
{
    
    <script type="text/javascript">
        $(document).ready(function () {
            $(".registerForm").validate({
                wrapper: "div",
                rules: {
                    'FirstName': {
                        required: true,
                        minLength: 3,
                        maxLength: 15
                    },
                    'LastName': {
                        required: true,
                        minLength: 3,
                        maxLength: 15
                    },
                    'Email': {
                        required: true,
                        email: true
                    },
                    'PhoneNumber': {
                        required: true,
                        phoneUS: true
                    },
                    'Password': {
                        required: true
                    },
                    'ConfirmPasswor': {
                        required: true
                    }
                },
                messages: {
                    'FirstName': {
                        required: 'First name is required',
                        minLength: 'Name can\'t be less than 3 letters',
                        maxLength: 'Name can\'t be more than 15 letters'
                    },
                    'LastName': {
                        required: 'Last name is required',
                        minLength: 'Name can\'t be less than 3 letters',
                        maxLength: 'Name can\'t be more than 15 letters'
                    },
                    'Email': {
                        required: 'First name is required',
                        email: 'Please enter a valid email'
                    },
                    'PhoneNumber': {
                        required: 'Phone Number is required',
                        phoneUS: 'A valid phone number consists of 0123456789'
                    },
                    'Password': {
                        required: 'A password is required'
                    },
                    'ConfirmPassword': {
                        required: 'Re-enter password'
                    }
                }
            })
        })
        
    </script>

}
