@model Lab21CoffeeShop.Models.UserModel

@{
    ViewBag.Title = "GC Coffee Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    List<SelectListItem> coffeeList = new List<SelectListItem>()
{
new SelectListItem { Text = "Black", Value = "Black" },
new SelectListItem { Text = "Regular", Value = "Regular" },
new SelectListItem { Text = "Light/Sweet", Value = "Gross" },
};
}

<div class="container-fluid">
    @using (Html.BeginForm("UserAdded", "Home", FormMethod.Post, new { @class = "registerForm" }))
    {
        @Html.ValidationSummary(true)   
        <div class="row">
            <div class="col-md-6">
                @Html.LabelFor(model => Model.FirstName, new { @class = "moveInRight" })
                @Html.TextBoxFor(model => Model.FirstName, new { @class = "form-control moveInLeft", @placeholder = "First Name" })
                @Html.ValidationMessageFor(model => Model.FirstName, "", new { @class = "text-danger" })
            </div>
            <br />
        </div>
        <br />
        <div class="row">
            <div class="col-md-6">
                @Html.LabelFor(user => user.LastName, new { @class = "moveInRight" })
                @Html.TextBoxFor(user => user.LastName, new { @class = "form-control moveInLeft", @placeholder = "Last Name" })
                @Html.ValidationMessageFor(user => user.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-6">
                @Html.LabelFor(user => user.Email, new { @class = "moveInRight" })
                @Html.TextBoxFor(user => user.Email, new { @class = "form-control moveInLeft", @placeholder = "sample@sample.com" })
                @Html.ValidationMessageFor(user => user.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-6">
                @Html.LabelFor(user => user.PhoneNumber, new { @class = "moveInRight" })
                @Html.TextBoxFor(user => user.PhoneNumber, new { @class = "form-control moveInLeft", @placeholder = "Phone Number" })
                @Html.ValidationMessageFor(user => user.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-6 mb-5">
                @Html.LabelFor(model => Model.Coffee, new { @class = "moveInRight" })
                @Html.DropDownList("CoffeeKey", coffeeList, new { @class = "moveInRight" })
                @Html.ValidationMessageFor(model => Model.Coffee, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-6">
                @Html.LabelFor(user => user.Password, new { @class = "moveInRight" })
                @Html.PasswordFor(user => user.Password, new { @class = "form-control moveInLeft", @id = "password", @placeholder = "Password" })
                @Html.ValidationMessageFor(user => user.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-6">
                @Html.LabelFor(user => user.ConfirmPassword, new { @class = "moveInRight" })
                @Html.PasswordFor(user => user.ConfirmPassword, new { @class = "form-control moveInLeft", @placeholder = "Re-Enter Password" })
                @Html.ValidationMessageFor(user => user.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col-md-6">
                <button class="btn btn-danger moveInBottom" type="submit" value="Register">Submit</button>
            </div>
        </div>
        <br />
    }
</div>
@*/*///////////////////////////////////////////////////////////
    /////////////////// jQuery Validaton///////////////////////
    //////////////////////////////////////////////////////////*/*@
@*@section scripts
    {

        <script type="text/javascript">
            $(document).ready(function () {
                $(".registerForm").validate({
                    wrapper: "div",
                    rules: {
                        FirstName: {
                            required: true,
                            minLength: 3,
                            maxLength: 15
                        },
                        LastName: {
                            required: true,
                            minLength: 3,
                            maxLength: 15
                        },
                        Email: {
                            required: true,
                            email: true
                        },
                        PhoneNumber: {
                            required: true,
                            phoneUS: true
                        },
                        Password: {
                            required: true,
                            minLength: 6
                        },
                        ConfirmPassword: {
                            required: true,
                            minLength: 6,
                            equalTo: "#password"
                        }
                    },
                    messages: {
                        FirstName: {
                            required: 'First name is required',
                            minLength: 'Name can\'t be less than 3 letters',
                            maxLength: 'Name can\'t be more than 15 letters'
                        },
                        LastName: {
                            required: 'Last name is required',
                            minLength: 'Name can\'t be less than 3 letters',
                            maxLength: 'Name can\'t be more than 15 letters'
                        },
                        Email: {
                            required: 'First name is required',
                            email: 'Please enter a valid email'
                        },
                        PhoneNumber: {
                            required: 'Phone Number is required',
                            phoneUS: 'A valid phone number consists of 0123456789'
                        },
                        Password: {
                            required: 'A password is required',
                            minLength: 'Must be more than 6 characters'
                        },
                        ConfirmPassword: {
                            required: 'Re-enter password',
                            minLength: 'Must be more than 6 characters',
                            equalTo: 'Passwords must match'
                        }
                    }
                })
            })

        </script>

    }*@
